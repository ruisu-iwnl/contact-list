name: Laravel Sail CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql/mysql-server:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.DB_DATABASE }}
          MYSQL_USER: ${{ secrets.DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build and push Docker image
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker buildx build --platform linux/amd64 -t your-docker-username/repository-name:latest .
        docker push your-docker-username/repository-name:latest

    - name: Set up Laravel Sail environment
      run: |
        cp .env.example .env
        echo "DB_HOST=mysql" >> .env
        echo "REDIS_HOST=redis" >> .env

    - name: Start Docker services
      run: docker-compose up -d mysql redis

    - name: Install Composer dependencies
      run: docker-compose exec -T laravel.test composer install --no-ansi --no-interaction --no-progress --optimize-autoloader

    - name: Generate application key
      run: docker-compose exec -T laravel.test php artisan key:generate

    - name: Cache configuration
      run: docker-compose exec -T laravel.test php artisan config:cache

    - name: Run database migrations
      run: docker-compose exec -T laravel.test php artisan migrate --force

    - name: Deploy to production
      run: |
        docker-compose exec -T laravel.test php artisan optimize
        docker-compose exec -T laravel.test php artisan route:cache
        docker-compose exec -T laravel.test php artisan view:cache
